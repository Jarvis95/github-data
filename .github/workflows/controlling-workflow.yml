name: Controlled Deployment Workflow
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get Codebase
        uses: actions/checkout@v5
      - name: Install java
        uses: actions/setup-java@v5
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: 'maven'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: install Dependencies
        run: mvn clean install
      - name: Test Code
        run: mvn test
      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: target/surefire-reports/com.example.github.GithubDataApplicationTests.txt
  build :
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get Codebase for Build
        uses: actions/checkout@v5
      - name: Install java
        uses: actions/setup-java@v5
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean package
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-jar
          path: target/github-data.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Codebase for Deployment
        uses: actions/checkout@v5
      - name: Install java
        uses: actions/setup-java@v5
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: 'maven'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: install Dependencies
        run: mvn clean install
      - name: get Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-jar
      - name: Output Artifacts
        run: ls
      - name: Deploy to Server
        run: echo "Deploying to server..."